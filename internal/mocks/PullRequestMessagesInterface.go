// Code generated by mockery v2.44.1. DO NOT EDIT.

package mocks

import (
	model "github.com/manomartins/bitbird/internal/model"
	mock "github.com/stretchr/testify/mock"
)

// PullRequestMessagesInterface is an autogenerated mock type for the PullRequestMessagesInterface type
type PullRequestMessagesInterface struct {
	mock.Mock
}

// FindAll provides a mock function with given fields:
func (_m *PullRequestMessagesInterface) FindAll() ([]model.PullRequestMessageModel, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for FindAll")
	}

	var r0 []model.PullRequestMessageModel
	var r1 error
	if rf, ok := ret.Get(0).(func() ([]model.PullRequestMessageModel, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() []model.PullRequestMessageModel); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.PullRequestMessageModel)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetById provides a mock function with given fields: prID
func (_m *PullRequestMessagesInterface) GetById(prID string) (*model.PullRequestMessageModel, error) {
	ret := _m.Called(prID)

	if len(ret) == 0 {
		panic("no return value specified for GetById")
	}

	var r0 *model.PullRequestMessageModel
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (*model.PullRequestMessageModel, error)); ok {
		return rf(prID)
	}
	if rf, ok := ret.Get(0).(func(string) *model.PullRequestMessageModel); ok {
		r0 = rf(prID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.PullRequestMessageModel)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(prID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Save provides a mock function with given fields:
func (_m *PullRequestMessagesInterface) Save() {
	_m.Called()
}

// Update provides a mock function with given fields: prID, messageID
func (_m *PullRequestMessagesInterface) Update(prID string, messageID string) error {
	ret := _m.Called(prID, messageID)

	if len(ret) == 0 {
		panic("no return value specified for Update")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(prID, messageID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewPullRequestMessagesInterface creates a new instance of PullRequestMessagesInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPullRequestMessagesInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *PullRequestMessagesInterface {
	mock := &PullRequestMessagesInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
